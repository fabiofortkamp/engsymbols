% \iffalse meta-comment
%
% Copyright (C) 2014 by Fábio Fortkamp <fabio@fabiofortkamp.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Fábio Fortkamp.
%
% This work consists of the files engsymbols.dtx and engsymbols.ins
% and the derived file engsymbols.sty.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{engsymbols.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{engsymbols}[2014/12/05 v0.1 basic skeleton for this package]
%
%<package>\RequirePackage{bm}
%<package>\RequirePackage{amsmath}
%<package>\RequirePackage{esdiff}
%<*driver>
\documentclass{ltxdoc}
\usepackage{engsymbols}[2014/12/02]
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\bibliographystyle{plain}
\EnableCrossrefs         
\CodelineIndex
\RecordChanges
\OnlyDescription
\begin{document}
  \DocInput{engsymbols.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{127}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v0.1}{2014/12/05}{Initial version}
%
% \GetFileInfo{engsymbols.sty}
%
% \DoNotIndex{\newcommand,\newenvironment}
% 
%
% \title{The \textsf{engsymbols} package\thanks{This document
%   corresponds to \textsf{engsymbols}~\fileversion, dated \filedate.}}
% \author{Fábio Fortkamp \\ \texttt{fabio@fabiofortkamp.com}}
%
% \maketitle
%
% \section{Introduction}
% \label{sec:introduction}
%
% This document describes the \textsf{engsymbols} package, a collection of macros to facilitate the writing of common engineering symbols.
%
% The following packages are prerequisites:
%
% \begin{itemize}
% \item \textsf{bm}
% \item \textsf{amsmath}
% \item \textsf{esdiff}
% \end{itemize}
%
% This package follows the conventions specified by ISO standards of typesetting mathematics \cite{bib:beccari}. The main points of this convention are:
%
% \begin{itemize}
% \item variables are always writen in italic, \emph{and also} in bold for vector and matrices
% \item in other words, vectors don't have arrows above it
% \item subscripts and superscripts are written in roman upright font when they do not indicate a variable per se; e.g. when they refer to a physicial object, a fluid fase, a state etc
% \end{itemize}
%
% \textsf{engsymbols} is actually just a collection of commands I, as a Ph.D. student in Mechanical Engineering, find useful, and I hope others can find it to. There aren't any special design principles, except that:
%
% \begin{itemize}
% \item Command names are not short, but are descriptive. The user can always define an alias, and many editors can parse the packages and offer tab completion.
% \item These macros are not intended to be the absolute true way of scientific writing. As I said, I try to follow some standards and observe what is commonly used.
% \end{itemize}
% 
% Please notice that the user should refer to other references such as papers and textbooks to get the meaning of the symbols I describe here.
%
%
%\section{Available commands}
%\label{sec:commands}
%
%
%\subsection{Special symbols}
%\label{sec:special-symbols}
%
% First we have some basic symbols, commands that take no arguments.
%
%\DescribeMacro{\volume} This \cs{volume} macro typesets a special symbol $\volume$ to indicate the total volume of something. The more logical $V$ is avoided, mainly in fluid mechanics texts, because it's used for velocity. I chose the calligraphic V because the often used $\forall$ is really ugly and is intended to use with logical propositions (``for all $x$ \ldots'').
%
% \DescribeMacro{\hheat} \DescribeMacro{\hmass} The symbols $\hheat$ (\cs{hheat}) and $\hmass$ (\cs{hmass}) are used in some textbooks to indicate the convection heat (or mass) transfer coeficient and to avoid confusion with enthalpy $h$. I'm aware that $\hbar$ is also used for the reduced Planck  constant, but I don't think it's used in engineering literature. I also know that the distinction between an enthalpy value and a heat transfer coefficient value can be inferred by the context, but in a equation with many terms, including terms with enthalpy and heat transfer rates, this can make things clearer. Also notice the m subscript in roman fonts; it's a coefficient for mass transfer, and not a coefficient for a variable $m$.
%
% \DescribeMacro{\diffusivitybinary} I deal with mixtures a lot, so there is \cs{diffusivitybinary} $\diffusivitybinary$, which is used to indicate the mass diffusivity of a binary mixture.
%
% \DescribeMacro{\universalgasconstant} Finally, there is a command \cs{universalgasconstant} to write $\universalgasconstant$, the universal gas constant. The u index (also in roman font) marks this as a constant; each fluid has its own ``gas constant'', defined as $R = \frac{\universalgasconstant}{M}$, where $M$ is the molar mass; hence for a mixture, this gas constant varies with the composition, and of course different fluids have different $R$. $\universalgasconstant$ is universal for all fluids. 
%
%
% \StopEventually{\bibliography{references.bib}}
%
% \section{Implementation}
%
%
% \subsection{Basic operations}
% \label{sec:basic-operations}
%
% \begin{macro}{\ped}
% \begin{macro}{\ap}
%   These macros by \cite{bib:beccari} typesets the argument in math roman font, to indicate a object. Italic subscripts should be used only to refer to another variables, for example, $c_P$ is the specific heat obtained by mantaining the pressure, a physical parameter, fixes. By contrast, $h\ped{L}$ (produced by |h\ped{L}|) is the liquid enthalpy; liquid is not a variable. The command \cs{ap}\marg{index} does the same to superscripts, like $T\ap{I}$ for the interface temperature.
%    \begin{macrocode}
\newcommand{\ped}[1]{\ensuremath{_{\mathrm{#1}}}}
\newcommand{\ap}[1]{\ensuremath{^{\mathrm{#1}}}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\nvector}
% \begin{macro}{\nmatrix}
%   We define vector and matrix commands according to ISO standards: bold italic for vectors ($\nvector{x}$) and matrices ($\nmatrix{A}$). The ``n'' in names stands for ``notation''. This requires the \texttt{bm} package.
%    \begin{macrocode}
\newcommand{\nvector}[1]{\bm{#1}}
\newcommand{\nmatrix}[1]{\bm{#1}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Special individual symbols}
% \label{sec:spec-indiv-symb}
% 
%\begin{macro}{\volume}
%  This macro produces a calligraphic V to indicate volume, as $\volume$. This is usually done to avoid confusion with velocity.
%    \begin{macrocode}
\newcommand{\volume}{\mathcal{V}}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\diffd}
%  This macro produces the differential $\diffd$ operator, as in $\diffd x$. The definition is fairly complex beacuse it tries  to do an optimal spacing, and is described by \cite{bib:beccari}.
%    \begin{macrocode}
\newcommand{\diffd}{\@ifnextchar^{\DIfF}{\DIfF^{}}}
\def\DIfF^#1{%
  \mathop{\mathrm{\mathstrut d}}%
      \nolimits^{#1}\gobblespace}
\def\gobblespace{%
  \futurelet\diffarg\opspace}
\def\opspace{%
  \let\DiffSpace\!%
  \ifx\diffarg(%
      \let\DiffSpace\relax
  \else
      \ifx\diffarg[%
          \let\DiffSpace\relax
      \else
          \ifx\diffarg\{%
              \let\DiffSpace\relax
          \fi\fi\fi\DiffSpace}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\hheat}
% \begin{macro}{\hmass}
%   These macros produces a ``crossed'' h as in $\hheat$. This is done in some texts to denote the convection heat transfer coefficient and differentiate it from enthalpy $h$. This is actually just an alias to the existing command \cs{hbar}, to give a more meaningful name. There is also \cs{hmass} to produce $\hmass$, used to indicate a mass transfer coefficient.
%    \begin{macrocode}
\newcommand{\hheat}{\hbar}
\newcommand{\hmass}{\hbar\ped{m}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\universalgasconstant}
%   A simple command to produce $\universalgasconstant$
%    \begin{macrocode}
\newcommand{\universalgasconstant}{R\ped{u}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\diffusivitybinary}
%  This is a shorthand for the diffusivity of a binary mixture, $\diffusivitybinary$.
%    \begin{macrocode}
\newcommand{\diffusivitybinary}{\mathcal{D}_{12}}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Common operations}
% \label{sec:common-operations}
%
% \begin{macro}{\average}
%   This command puts a line above the argument (like $\average{x}$), a notation widely used to indicate some type of average.
%    \begin{macrocode}
\newcommand{\average}[1]{\overline{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\rate}
%   This macro denotes the rate of something, like $\rate{m}$ for a mass flow rate.
%    \begin{macrocode}
\newcommand{\rate}[1]{\dot{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\flux}
%   Produces $\flux{q}$.
%    \begin{macrocode}
\newcommand{\flux}[1]{{#1}''}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\divergent}
% \begin{macro}{\divergentpar}
% \begin{macro}{divergentn}
%   These two macros produce the diverget of a vector $\divergentv{\nvector{q}}$. The \texttt{par} variant automatically adds parentheses, useful for multiple arguments like $\divergentpar{\rho \nvector{V}}$ (produced with |\divergentpar{\rho \nvector}|). The \cs{divergentv} command  automatically converts the argument to a vector 
%    \begin{macrocode}
\newcommand{\divergent}[1]{\nabla \cdot #1}
\newcommand{\divergentv}[1]{\divergent{\nvector{#1}}}
\newcommand{\divergentpar}[1]{\divergent{\left( #1 \right)}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\gradient}
% \begin{macro}{\gradientpar}
%   Gradient of a scalar $\gradient{T}$. The \texttt{par} variant introduces parentheses (e.g. $\gradientpar{\frac{\rho_1}{\rho}}$.
%    \begin{macrocode}
\newcommand{\gradient}[1]{\nabla {#1}}
\newcommand{\gradientpar}[1]{\gradient{\left( {#1} \right)}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\laplacian}
% \begin{macro}{\laplacianpar}
%   The laplacian of a scalar $x$ is defined as $\laplacian{x} = \divergent{\gradient{x}}$. One could also use $\laplacianpar{ \rho c_p T}$.
%    \begin{macrocode}
\newcommand{\laplacian}[1]{\nabla^2 #1}
\newcommand{\laplacianpar}[1]{\laplacian{\left( #1 \right)}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{vectornorm}
%   Produces the norm of a vector, like $\vectornorm{\nvector{V}}$.
%    \begin{macrocode}
\newcommand{\vectornorm}[1]{\left\lVert #1 \right\rVert}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\diffpar}
% \begin{macro}{\diffppar}
%   This produces something like $\diffpar{\rho V}{x}$, building on the \cs{diff} command from the \textsf{esdiff} package. I find it really useful for printing derivatives when the function to be derived is a product of variables. Compare with $\diff{\rho V}{x}$. Notice the parentheses are automatically added. There is also the \cs{diffppar} for partial derivatives.
%    \begin{macrocode}
\newcommand{\diffpar}[2]{\diff{}{#2} \left( #1 \right)}
\newcommand{\diffppar}[2]{\diffp{}{#2} \left( #1 \right)}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \Finale
\endinput
